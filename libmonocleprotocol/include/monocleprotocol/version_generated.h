// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_VERSION_MONOCLE_H_
#define FLATBUFFERS_GENERATED_VERSION_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

namespace monocle {

struct VERSION;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) VERSION FLATBUFFERS_FINAL_CLASS {
 private:
  int32_t major_;
  int32_t minor_;
  int32_t build_;

 public:
  VERSION() {
    memset(static_cast<void *>(this), 0, sizeof(VERSION));
  }
  VERSION(int32_t _major, int32_t _minor, int32_t _build)
      : major_(flatbuffers::EndianScalar(_major)),
        minor_(flatbuffers::EndianScalar(_minor)),
        build_(flatbuffers::EndianScalar(_build)) {
  }
  int32_t major() const {
    return flatbuffers::EndianScalar(major_);
  }
  int32_t minor() const {
    return flatbuffers::EndianScalar(minor_);
  }
  int32_t build() const {
    return flatbuffers::EndianScalar(build_);
  }
};
FLATBUFFERS_STRUCT_END(VERSION, 12);

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_VERSION_MONOCLE_H_
