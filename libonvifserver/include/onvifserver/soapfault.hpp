// soapfault.hpp
//

#ifndef ID425O6YNO0B9I9T8S14V11BW927JXPZOZ
#define ID425O6YNO0B9I9T8S14V11BW927JXPZOZ

///// Includes /////

#include <string>

///// Namespaces /////

namespace onvif
{

namespace server
{

///// Enumerations /////

enum FAULT
{
  FAULT_ACTIONFAILED,
  FAULT_ACTIONNOTSUPPORTED,
  FAULT_BADCONFIGURATION,
  FAULT_CANNOTDELETERECEIVER,
  FAULT_CONFIGMODIFY,
  FAULT_EMPTYSCOPE,
  FAULT_FIXEDSCOPE,
  FAULT_FIXEDUSER,
  FAULT_INVALIDARGS,
  FAULT_INVALIDDATETIME,
  FAULT_INVALIDGATEWAYADDRESS,
  FAULT_INVALIDHOSTNAME,
  FAULT_INVALIDIPV4ADDRESS,
  FAULT_INVALIDMESSAGECONTENTEXPRESSIONFAULT,
  FAULT_INVALIDNETWORKINTERFACE,
  FAULT_INVALIDSOURCE,
  FAULT_INVALIDSTREAMSETUP,
  FAULT_INVALIDTOPICEXPRESSIONFAULT,
  FAULT_INVALIDTIMEZONE,
  FAULT_MAXRECEIVERS,
  FAULT_NAMESPACE,
  FAULT_NOPROFILE,
  FAULT_NORECORDING,
  FAULT_NORECORDINGJOB,
  FAULT_NOSCOPE,
  FAULT_NOSUCHSERVICE,
  FAULT_NOTAUTHORIZED,
  FAULT_NOTIFYMESSAGENOTSUPPORTEDFAULT,
  FAULT_NOTRACK,
  FAULT_NTPSERVERUNDEFINED,
  FAULT_PASSWORDTOOLONG,
  FAULT_PASSWORDTOOWEAK,
  FAULT_PORTALREADYINUSE,
  FAULT_SCOPEOVERWRITE,
  FAULT_SERVICENOTSUPPORTED,
  FAULT_TOOMANYUSERS,
  FAULT_TOPICNOTSUPPORTEDFAULT,
  FAULT_UNABLETODESTROYSUBSCRIPTIONFAULT,
  FAULT_UNACCEPTABLEINITIALTERMINATIONTIME,
  FAULT_UNACCEPTABLETERMINATIONTIME,
  FAULT_UNKNOWNACTION,
  FAULT_UNKNOWNTOKEN,
  FAULT_USERNAMECLASH,
  FAULT_USERNAMEMISSING,
  FAULT_USERNAMETOOLONG,
  FAULT_WELLFORMED
};

///// Classes /////

class SoapFault
{
 public:

  SoapFault(const bool header, const FAULT fault, const std::string& detail);
  SoapFault(const FAULT fault, const std::string& detail);
  ~SoapFault();

  std::string ToString() const;

 private:

  std::string GetFaultCode() const;
  std::string GetDetail() const;
  std::string GetSubCode() const;
  std::string GetSubSubCode() const;
  std::string GetReason() const;

  const bool header_;
  const FAULT fault_;
  const std::string detail_;

};

}

}

#endif
